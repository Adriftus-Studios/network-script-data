error_handler_events:
  type: world
  debug: false
  events:
    on player dies:
      - foreach <server.players||<list>> as:player:
        - if <[player].has_flag[staff]> && <[player].is_online>:
          - narrate "Teleport to death point: <element[<&l><&lb>Death<&sp>Point<&rb>].on_click[/ex -q teleport <context.entity.location>]>"
    on script generates error:
      - if <context.message.ends_with[is<&sp>invalid!]> && <context.message.starts_with[Tag<&sp><&lt>inventory<&lb>]> && !<player.has_flag[debug]>:
        - wait 1t
        - inventory close
      - if <context.script||null> != null && <context.line||null> != null:
        - ratelimit <context.script> 1m
        - if <player||null> != null:
          - title "title:<&c>BUG FOUND!" "subtitle:Read your chat."
          - narrate "<&e>You have just triggered an error, please report any recent actions taken to our staff in the discord, please!"
          - define "cause:<player.name.as_element.on_hover[Click to teleport].on_click[/ex -q teleport <player.location||null> silent]||None>"
        - else:
          - define cause:None
        - announce to_console "<&c>|----------------------| <&4>Error<&c> |-----------------------|"
        - announce to_console "<&c> <context.message>"
        - announce to_console "<&c> Player: <[cause]>"
        - announce to_console "<&c> Script: <context.script.name>"
        - announce to_console "<&c> File: <context.script.filename.split[/plugins/Denizen/scripts/].get[2]>"
        - announce to_console "<&c> Line: <context.line>"
        - announce to_flagged:debug "<&c>|----------------------| <&4>Error<&c> |-----------------------|"
        - announce to_flagged:debug "<&c> <context.message>"
        - announce to_flagged:debug "<&c> Player: <[cause]>"
        - announce to_flagged:debug "<&c> Script: <context.script.name>"
        - announce to_flagged:debug "<&c> File: <context.script.filename.split[/plugins/Denizen/scripts/].get[2]>"
        - announce to_flagged:debug "<&c> Line: <context.line>"
        - foreach <context.queue.definitions.deduplicate||<list>> as:definition:
          - define data:<context.queue.definition[<[definition]>]>
          - define "info:Type: <[data].type||Unknown>"
          - define "info:|:Script: <[data].script.name||None>"
          - choose <[data].type>:
            - case item:
              - define "info:|:Click to obtain."
              - define "info:|:Material: <[data].material.name||Unknown>"
              - if <[data].has_display>:
                - define "info:|:Display Name: <[data].display>"
              - if <[data].has_lore>:
                - foreach <[data].lore> as:line:
                  - define "info:|:Lore line <[loop_index]>: <[line]>"
            - case location:
              - define "info:|:Click to teleport."
              - define "info:|:Notable Name: <[data].notable_name||None>"
            - case entity:
              - define "info:|:Click to teleport."
              - define "info:|:Entity Type: <[data].entity_type>"
          - define "info:|:Raw: <[data]>"
          - if <[data].type> == location:
            - define "definitions:|:<&l><el@[<[definition]>].on_hover[<[info].separated_by[<&nl><&r>]>].on_click[/ex -q teleport <[data]>]>"
          - else if <[data].type> == item:
            - define "definitions:|:<&l><el@[<[definition]>].on_hover[<[info].separated_by[<&nl><&r>]>].on_click[/ex -q give <[data].as_item>]>"
          - else if <[data].type> == entity:
            - define "definitions:|:<&l><el@[<[definition]>].on_hover[<[info].separated_by[<&nl><&r>]>].on_click[/ex -q teleport <[data].location>]>"
          - else if <[data].type> == inventory:
            - define "definitions:|:<&l><el@[<[definition]>].on_hover[<[info].separated_by[<&nl><&r>]>].on_click[/ex -q inventory open d:<[data].as_inventory>]>"
          - else:
            - define "definitions:|:<&l><el@[<[definition]>].on_hover[<[info].separated_by[<&nl><&r>]>]>"
          - define "definitions_raw:|:<[definition].parsed><&co> <[data]>"
        - announce to_flagged:debug "<&c> Definitions: <[definitions].separated_by[<&sp>]||None>"
        - bungeerun relay discord_sendMessage "def:AGDev|<bungee.server>|```yaml<&nl>---------------------- Error -----------------------<&nl> Message: <context.message><&nl> Player: <player.name||None><&nl> Script: <context.script.name><&nl> File: <context.script.filename.split[/plugins/Denizen/scripts/].get[2]><&nl> Line: <context.line>```"
        - if <[definitions_raw]||null> != null:
          - bungeerun relay discord_sendMessage "def:AGDev|<bungee.server>|```yaml<&nl>Definitions:<&nl>   <[definitions_raw].separated_by[<&nl>   ]>```"
cause_error_command:
  type: command
  name: cause_error
  permission: cause_error
  debug: false
  script:
  - define item:<player.item_in_hand>
  - define location:<player.location.forward[10]>
  - narrate <el@1.mul[b]>
